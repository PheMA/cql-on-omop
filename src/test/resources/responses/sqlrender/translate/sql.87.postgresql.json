{
  "targetSQL": "CREATE TEMP TABLE Codesets  (codeset_id int NOT NULL,\r\n  concept_id bigint NOT NULL\r\n)\r\n;\r\n\r\nINSERT INTO Codesets (codeset_id, concept_id)\nSELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM\r\n( \r\n  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45917083,45948882,37016767,4225656,45769832,373999,201254,4099215,4096668)and invalid_reason is null\r\n\r\n) I\r\n) C;\r\n\r\n\r\nCREATE TEMP TABLE qualified_events\r\n\nAS\nWITH primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id)  AS (\r\n-- Begin Primary Events\r\nselect P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id\r\nFROM\r\n(\r\n  select E.person_id, E.start_date, E.end_date, row_number() OVER (PARTITION BY E.person_id ORDER BY E.start_date ASC) ordinal, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id\r\n  FROM \r\n  (\r\n  -- Begin Visit Occurrence Criteria\r\nselect C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id\r\nfrom \r\n(\r\n  select vo.* \r\n  FROM @cdm_database_schema.VISIT_OCCURRENCE vo\r\n\r\n) C\r\n\r\n\r\n-- End Visit Occurrence Criteria\r\n\r\n  ) E\r\n\tJOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date\r\n  WHERE (OP.OBSERVATION_PERIOD_START_DATE + 0*INTERVAL'1 day') <= E.START_DATE AND (E.START_DATE + 0*INTERVAL'1 day') <= OP.OBSERVATION_PERIOD_END_DATE\r\n) P\r\nWHERE P.ordinal = 1\r\n-- End Primary Events\r\n\r\n)\r\n SELECT\nevent_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id\r\n\nFROM\n(\r\n  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id\r\n  FROM primary_events pe\r\n  \r\n) QE\r\n\r\n;\nANALYZE qualified_events\r\n;\r\n\r\n--- Inclusion Rule Inserts\r\n\r\nCREATE TEMP TABLE Inclusion_0\r\n\nAS\nSELECT\n0 as inclusion_rule_id, person_id, event_id\r\n\nFROM\n(\r\n  select pe.person_id, pe.event_id\r\n  FROM qualified_events pe\r\n  \nJOIN (\n-- Begin Criteria Group\r\nselect 0 as index_id, person_id, event_id\r\nFROM\r\n(\r\n  select E.person_id, E.event_id \r\n  FROM qualified_events E\r\n  INNER JOIN\r\n  (\r\n    -- Begin Correlated Criteria\r\nSELECT 0 as index_id, p.person_id, p.event_id\r\nFROM qualified_events P\r\nINNER JOIN\r\n(\r\n  -- Begin Condition Occurrence Criteria\r\nSELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, (C.condition_start_date + 1*INTERVAL'1 day')) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id\r\nFROM \r\n(\r\n  SELECT co.* \r\n  FROM @cdm_database_schema.CONDITION_OCCURRENCE co\r\n  JOIN Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))\r\n) C\r\n\r\n\r\n-- End Condition Occurrence Criteria\r\n\r\n) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE and A.START_DATE <= P.OP_END_DATE\r\nGROUP BY p.person_id, p.event_id\r\nHAVING COUNT(A.TARGET_CONCEPT_ID) >= 1\r\n-- End Correlated Criteria\r\n\r\n  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id\r\n  GROUP BY E.person_id, E.event_id\r\n  HAVING COUNT(index_id) = 1\r\n) G\r\n-- End Criteria Group\r\n) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id\r\n) Results\r\n;\nANALYZE Inclusion_0\r\n;\r\n\nCREATE TEMP TABLE Inclusion_1\r\n\nAS\nSELECT\n1 as inclusion_rule_id, person_id, event_id\r\n\nFROM\n(\r\n  select pe.person_id, pe.event_id\r\n  FROM qualified_events pe\r\n  \nJOIN (\n-- Begin Criteria Group\r\nselect 0 as index_id, person_id, event_id\r\nFROM\r\n(\r\n  select E.person_id, E.event_id \r\n  FROM qualified_events E\r\n  INNER JOIN\r\n  (\r\n    -- Begin Correlated Criteria\r\nSELECT 0 as index_id, p.person_id, p.event_id\r\nFROM qualified_events P\r\nINNER JOIN\r\n(\r\n  -- Begin Visit Occurrence Criteria\r\nselect C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id\r\nfrom \r\n(\r\n  select vo.* \r\n  FROM @cdm_database_schema.VISIT_OCCURRENCE vo\r\n\r\n) C\r\n\r\n\r\n-- End Visit Occurrence Criteria\r\n\r\n) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE and A.START_DATE <= P.OP_END_DATE\r\nGROUP BY p.person_id, p.event_id\r\nHAVING COUNT(A.TARGET_CONCEPT_ID) >= 1\r\n-- End Correlated Criteria\r\n\r\n  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id\r\n  GROUP BY E.person_id, E.event_id\r\n  HAVING COUNT(index_id) = 1\r\n) G\r\n-- End Criteria Group\r\n) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id\r\n) Results\r\n;\nANALYZE Inclusion_1\r\n;\r\n\nCREATE TEMP TABLE inclusion_events\n\nAS\nSELECT\ninclusion_rule_id, person_id, event_id\n\nFROM\n(select inclusion_rule_id, person_id, event_id from Inclusion_0\nUNION ALL\nselect inclusion_rule_id, person_id, event_id from Inclusion_1) I;\nANALYZE inclusion_events\n;\nTRUNCATE TABLE Inclusion_0;\nDROP TABLE Inclusion_0;\n\nTRUNCATE TABLE Inclusion_1;\nDROP TABLE Inclusion_1;\n\r\n\r\nCREATE TEMP TABLE included_events\r\n\nAS\nWITH cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal)  AS (\r\n  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal\r\n  from\r\n  (\r\n    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask\r\n    from qualified_events Q\r\n    LEFT JOIN inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id\r\n    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date\r\n  ) MG -- matching groups\r\n\r\n  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask\r\n  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)\r\n\r\n)\r\n SELECT\nevent_id, person_id, start_date, end_date, op_start_date, op_end_date\r\n\nFROM\ncteIncludedEvents Results\r\nWHERE Results.ordinal = 1\r\n;\nANALYZE included_events\r\n;\r\n\r\n\r\n\r\n-- generate cohort periods into #final_cohort\r\nCREATE TEMP TABLE cohort_rows\r\n\nAS\nWITH cohort_ends (event_id, person_id, end_date)  AS (\r\n\t-- cohort exit dates\r\n  -- By default, cohort exit at the event's op end date\nselect event_id, person_id, op_end_date as end_date from included_events\r\n),\r\nfirst_ends (person_id, start_date, end_date) as\r\n(\r\n\tselect F.person_id, F.start_date, F.end_date\r\n\tFROM (\r\n\t  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal \r\n\t  from included_events I\r\n\t  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date\r\n\t) F\r\n\tWHERE F.ordinal = 1\r\n)\r\n SELECT\nperson_id, start_date, end_date\r\n\nFROM\nfirst_ends;\nANALYZE cohort_rows\r\n;\r\n\r\nCREATE TEMP TABLE final_cohort\r\n\nAS\nWITH cteEndDates (person_id, end_date)  AS (\t\r\n\tSELECT\r\n\t\tperson_id\r\n\t\t, (event_date + -1 * 0*INTERVAL'1 day')  as end_date\r\n\tFROM\r\n\t(\r\n\t\tSELECT\r\n\t\t\tperson_id\r\n\t\t\t, event_date\r\n\t\t\t, event_type\r\n\t\t\t, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal \r\n\t\t\t, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord\r\n\t\tFROM\r\n\t\t(\r\n\t\t\tSELECT\r\n\t\t\t\tperson_id\r\n\t\t\t\t, start_date AS event_date\r\n\t\t\t\t, -1 AS event_type\r\n\t\t\t\t, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal\r\n\t\t\tFROM cohort_rows\r\n\t\t\r\n\t\t\tUNION ALL\r\n\t\t\r\n\r\n\t\t\tSELECT\r\n\t\t\t\tperson_id\r\n\t\t\t\t, (end_date + 0*INTERVAL'1 day') as end_date\r\n\t\t\t\t, 1 AS event_type\r\n\t\t\t\t, NULL\r\n\t\t\tFROM cohort_rows\r\n\t\t) RAWDATA\r\n\t) e\r\n\tWHERE (2 * e.start_ordinal) - e.overall_ord = 0\r\n),\r\ncteEnds (person_id, start_date, end_date) AS\r\n(\r\n\tSELECT\r\n\t\t c.person_id\r\n\t\t, c.start_date\r\n\t\t, MIN(e.end_date) AS era_end_date\r\n\tFROM cohort_rows c\r\n\tJOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date\r\n\tGROUP BY c.person_id, c.start_date\r\n)\r\n SELECT\nperson_id, min(start_date) as start_date, end_date\r\n\nFROM\ncteEnds\r\ngroup by person_id, end_date\r\n;\nANALYZE final_cohort\r\n;\r\n\r\nDELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;\r\nINSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)\r\nselect @target_cohort_id as cohort_definition_id, person_id, start_date, end_date \nFROM final_cohort CO\r\n;\r\n\r\n\r\n\r\n\r\n\r\nTRUNCATE TABLE cohort_rows;\r\nDROP TABLE cohort_rows;\r\n\r\nTRUNCATE TABLE final_cohort;\r\nDROP TABLE final_cohort;\r\n\r\nTRUNCATE TABLE inclusion_events;\r\nDROP TABLE inclusion_events;\r\n\r\nTRUNCATE TABLE qualified_events;\r\nDROP TABLE qualified_events;\r\n\r\nTRUNCATE TABLE included_events;\r\nDROP TABLE included_events;\r\n\r\nTRUNCATE TABLE Codesets;\r\nDROP TABLE Codesets;\r\n"
}