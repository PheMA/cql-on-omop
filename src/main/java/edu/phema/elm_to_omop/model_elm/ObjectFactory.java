//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/model_elm">http://java.sun.com/xml/model_elm</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.07.19 at 03:15:28 PM CDT 
//


package edu.phema.elm_to_omop.model_elm;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.phema.elm_to_omop.model_elm package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Library_QNAME = new QName("urn:hl7-org:elm:r1", "library");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.phema.elm_to_omop.model_elm
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Library }
     * 
     */
    public Library createLibrary() {
        return new Library();
    }

    /**
     * Create an instance of {@link Or }
     * 
     */
    public Or createOr() {
        return new Or();
    }

    /**
     * Create an instance of {@link Query }
     * 
     */
    public Query createQuery() {
        return new Query();
    }

    /**
     * Create an instance of {@link Ceiling }
     * 
     */
    public Ceiling createCeiling() {
        return new Ceiling();
    }

    /**
     * Create an instance of {@link Median }
     * 
     */
    public Median createMedian() {
        return new Median();
    }

    /**
     * Create an instance of {@link ToDecimal }
     * 
     */
    public ToDecimal createToDecimal() {
        return new ToDecimal();
    }

    /**
     * Create an instance of {@link Repeat }
     * 
     */
    public Repeat createRepeat() {
        return new Repeat();
    }

    /**
     * Create an instance of {@link Distinct }
     * 
     */
    public Distinct createDistinct() {
        return new Distinct();
    }

    /**
     * Create an instance of {@link IsFalse }
     * 
     */
    public IsFalse createIsFalse() {
        return new IsFalse();
    }

    /**
     * Create an instance of {@link ProperIn }
     * 
     */
    public ProperIn createProperIn() {
        return new ProperIn();
    }

    /**
     * Create an instance of {@link CodeRef }
     * 
     */
    public CodeRef createCodeRef() {
        return new CodeRef();
    }

    /**
     * Create an instance of {@link FunctionRef }
     * 
     */
    public FunctionRef createFunctionRef() {
        return new FunctionRef();
    }

    /**
     * Create an instance of {@link SameOrAfter }
     * 
     */
    public SameOrAfter createSameOrAfter() {
        return new SameOrAfter();
    }

    /**
     * Create an instance of {@link PositionOf }
     * 
     */
    public PositionOf createPositionOf() {
        return new PositionOf();
    }

    /**
     * Create an instance of {@link NotEqual }
     * 
     */
    public NotEqual createNotEqual() {
        return new NotEqual();
    }

    /**
     * Create an instance of {@link OperandDef }
     * 
     */
    public OperandDef createOperandDef() {
        return new OperandDef();
    }

    /**
     * Create an instance of {@link Sum }
     * 
     */
    public Sum createSum() {
        return new Sum();
    }

    /**
     * Create an instance of {@link Code }
     * 
     */
    public Code createCode() {
        return new Code();
    }

    /**
     * Create an instance of {@link ValueSetRef }
     * 
     */
    public ValueSetRef createValueSetRef() {
        return new ValueSetRef();
    }

    /**
     * Create an instance of {@link ProperIncludes }
     * 
     */
    public ProperIncludes createProperIncludes() {
        return new ProperIncludes();
    }

    /**
     * Create an instance of {@link Min }
     * 
     */
    public Min createMin() {
        return new Min();
    }

    /**
     * Create an instance of {@link TimeFrom }
     * 
     */
    public TimeFrom createTimeFrom() {
        return new TimeFrom();
    }

    /**
     * Create an instance of {@link OverlapsBefore }
     * 
     */
    public OverlapsBefore createOverlapsBefore() {
        return new OverlapsBefore();
    }

    /**
     * Create an instance of {@link DateFrom }
     * 
     */
    public DateFrom createDateFrom() {
        return new DateFrom();
    }

    /**
     * Create an instance of {@link Contains }
     * 
     */
    public Contains createContains() {
        return new Contains();
    }

    /**
     * Create an instance of {@link Subtract }
     * 
     */
    public Subtract createSubtract() {
        return new Subtract();
    }

    /**
     * Create an instance of {@link Xor }
     * 
     */
    public Xor createXor() {
        return new Xor();
    }

    /**
     * Create an instance of {@link QueryLetRef }
     * 
     */
    public QueryLetRef createQueryLetRef() {
        return new QueryLetRef();
    }

    /**
     * Create an instance of {@link Split }
     * 
     */
    public Split createSplit() {
        return new Split();
    }

    /**
     * Create an instance of {@link EndsWith }
     * 
     */
    public EndsWith createEndsWith() {
        return new EndsWith();
    }

    /**
     * Create an instance of {@link TernaryExpression }
     * 
     */
    public TernaryExpression createTernaryExpression() {
        return new TernaryExpression();
    }

    /**
     * Create an instance of {@link LessOrEqual }
     * 
     */
    public LessOrEqual createLessOrEqual() {
        return new LessOrEqual();
    }

    /**
     * Create an instance of {@link Predecessor }
     * 
     */
    public Predecessor createPredecessor() {
        return new Predecessor();
    }

    /**
     * Create an instance of {@link Overlaps }
     * 
     */
    public Overlaps createOverlaps() {
        return new Overlaps();
    }

    /**
     * Create an instance of {@link Starts }
     * 
     */
    public Starts createStarts() {
        return new Starts();
    }

    /**
     * Create an instance of {@link ConceptRef }
     * 
     */
    public ConceptRef createConceptRef() {
        return new ConceptRef();
    }

    /**
     * Create an instance of {@link Matches }
     * 
     */
    public Matches createMatches() {
        return new Matches();
    }

    /**
     * Create an instance of {@link SortClause }
     * 
     */
    public SortClause createSortClause() {
        return new SortClause();
    }

    /**
     * Create an instance of {@link Instance }
     * 
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link AliasRef }
     * 
     */
    public AliasRef createAliasRef() {
        return new AliasRef();
    }

    /**
     * Create an instance of {@link ToList }
     * 
     */
    public ToList createToList() {
        return new ToList();
    }

    /**
     * Create an instance of {@link Union }
     * 
     */
    public Union createUnion() {
        return new Union();
    }

    /**
     * Create an instance of {@link As }
     * 
     */
    public As createAs() {
        return new As();
    }

    /**
     * Create an instance of {@link Abs }
     * 
     */
    public Abs createAbs() {
        return new Abs();
    }

    /**
     * Create an instance of {@link InstanceElement }
     * 
     */
    public InstanceElement createInstanceElement() {
        return new InstanceElement();
    }

    /**
     * Create an instance of {@link Upper }
     * 
     */
    public Upper createUpper() {
        return new Upper();
    }

    /**
     * Create an instance of {@link Convert }
     * 
     */
    public Convert createConvert() {
        return new Convert();
    }

    /**
     * Create an instance of {@link ParameterRef }
     * 
     */
    public ParameterRef createParameterRef() {
        return new ParameterRef();
    }

    /**
     * Create an instance of {@link SameAs }
     * 
     */
    public SameAs createSameAs() {
        return new SameAs();
    }

    /**
     * Create an instance of {@link Length }
     * 
     */
    public Length createLength() {
        return new Length();
    }

    /**
     * Create an instance of {@link AllTrue }
     * 
     */
    public AllTrue createAllTrue() {
        return new AllTrue();
    }

    /**
     * Create an instance of {@link After }
     * 
     */
    public After createAfter() {
        return new After();
    }

    /**
     * Create an instance of {@link ChoiceTypeSpecifier }
     * 
     */
    public ChoiceTypeSpecifier createChoiceTypeSpecifier() {
        return new ChoiceTypeSpecifier();
    }

    /**
     * Create an instance of {@link Power }
     * 
     */
    public Power createPower() {
        return new Power();
    }

    /**
     * Create an instance of {@link DurationBetween }
     * 
     */
    public DurationBetween createDurationBetween() {
        return new DurationBetween();
    }

    /**
     * Create an instance of {@link Add }
     * 
     */
    public Add createAdd() {
        return new Add();
    }

    /**
     * Create an instance of {@link Meets }
     * 
     */
    public Meets createMeets() {
        return new Meets();
    }

    /**
     * Create an instance of {@link Lower }
     * 
     */
    public Lower createLower() {
        return new Lower();
    }

    /**
     * Create an instance of {@link Start }
     * 
     */
    public Start createStart() {
        return new Start();
    }

    /**
     * Create an instance of {@link PopulationVariance }
     * 
     */
    public PopulationVariance createPopulationVariance() {
        return new PopulationVariance();
    }

    /**
     * Create an instance of {@link NamedTypeSpecifier }
     * 
     */
    public NamedTypeSpecifier createNamedTypeSpecifier() {
        return new NamedTypeSpecifier();
    }

    /**
     * Create an instance of {@link ForEach }
     * 
     */
    public ForEach createForEach() {
        return new ForEach();
    }

    /**
     * Create an instance of {@link Divide }
     * 
     */
    public Divide createDivide() {
        return new Divide();
    }

    /**
     * Create an instance of {@link Last }
     * 
     */
    public Last createLast() {
        return new Last();
    }

    /**
     * Create an instance of {@link Implies }
     * 
     */
    public Implies createImplies() {
        return new Implies();
    }

    /**
     * Create an instance of {@link CodeSystemDef }
     * 
     */
    public CodeSystemDef createCodeSystemDef() {
        return new CodeSystemDef();
    }

    /**
     * Create an instance of {@link Literal }
     * 
     */
    public Literal createLiteral() {
        return new Literal();
    }

    /**
     * Create an instance of {@link Multiply }
     * 
     */
    public Multiply createMultiply() {
        return new Multiply();
    }

    /**
     * Create an instance of {@link ProperContains }
     * 
     */
    public ProperContains createProperContains() {
        return new ProperContains();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link First }
     * 
     */
    public First createFirst() {
        return new First();
    }

    /**
     * Create an instance of {@link IdentifierRef }
     * 
     */
    public IdentifierRef createIdentifierRef() {
        return new IdentifierRef();
    }

    /**
     * Create an instance of {@link CalculateAgeAt }
     * 
     */
    public CalculateAgeAt createCalculateAgeAt() {
        return new CalculateAgeAt();
    }

    /**
     * Create an instance of {@link Coalesce }
     * 
     */
    public Coalesce createCoalesce() {
        return new Coalesce();
    }

    /**
     * Create an instance of {@link Not }
     * 
     */
    public Not createNot() {
        return new Not();
    }

    /**
     * Create an instance of {@link Avg }
     * 
     */
    public Avg createAvg() {
        return new Avg();
    }

    /**
     * Create an instance of {@link Descendents }
     * 
     */
    public Descendents createDescendents() {
        return new Descendents();
    }

    /**
     * Create an instance of {@link Concatenate }
     * 
     */
    public Concatenate createConcatenate() {
        return new Concatenate();
    }

    /**
     * Create an instance of {@link Now }
     * 
     */
    public Now createNow() {
        return new Now();
    }

    /**
     * Create an instance of {@link IncludeDef }
     * 
     */
    public IncludeDef createIncludeDef() {
        return new IncludeDef();
    }

    /**
     * Create an instance of {@link End }
     * 
     */
    public End createEnd() {
        return new End();
    }

    /**
     * Create an instance of {@link Combine }
     * 
     */
    public Combine createCombine() {
        return new Combine();
    }

    /**
     * Create an instance of {@link Time }
     * 
     */
    public Time createTime() {
        return new Time();
    }

    /**
     * Create an instance of {@link StartsWith }
     * 
     */
    public StartsWith createStartsWith() {
        return new StartsWith();
    }

    /**
     * Create an instance of {@link DateTimeComponentFrom }
     * 
     */
    public DateTimeComponentFrom createDateTimeComponentFrom() {
        return new DateTimeComponentFrom();
    }

    /**
     * Create an instance of {@link With }
     * 
     */
    public With createWith() {
        return new With();
    }

    /**
     * Create an instance of {@link Successor }
     * 
     */
    public Successor createSuccessor() {
        return new Successor();
    }

    /**
     * Create an instance of {@link Children }
     * 
     */
    public Children createChildren() {
        return new Children();
    }

    /**
     * Create an instance of {@link Filter }
     * 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link IsTrue }
     * 
     */
    public IsTrue createIsTrue() {
        return new IsTrue();
    }

    /**
     * Create an instance of {@link Exists }
     * 
     */
    public Exists createExists() {
        return new Exists();
    }

    /**
     * Create an instance of {@link IsNull }
     * 
     */
    public IsNull createIsNull() {
        return new IsNull();
    }

    /**
     * Create an instance of {@link TupleElementDefinition }
     * 
     */
    public TupleElementDefinition createTupleElementDefinition() {
        return new TupleElementDefinition();
    }

    /**
     * Create an instance of {@link SingletonFrom }
     * 
     */
    public SingletonFrom createSingletonFrom() {
        return new SingletonFrom();
    }

    /**
     * Create an instance of {@link Retrieve }
     * 
     */
    public Retrieve createRetrieve() {
        return new Retrieve();
    }

    /**
     * Create an instance of {@link CodeSystemRef }
     * 
     */
    public CodeSystemRef createCodeSystemRef() {
        return new CodeSystemRef();
    }

    /**
     * Create an instance of {@link ProperIncludedIn }
     * 
     */
    public ProperIncludedIn createProperIncludedIn() {
        return new ProperIncludedIn();
    }

    /**
     * Create an instance of {@link Count }
     * 
     */
    public Count createCount() {
        return new Count();
    }

    /**
     * Create an instance of {@link TupleTypeSpecifier }
     * 
     */
    public TupleTypeSpecifier createTupleTypeSpecifier() {
        return new TupleTypeSpecifier();
    }

    /**
     * Create an instance of {@link DateTime }
     * 
     */
    public DateTime createDateTime() {
        return new DateTime();
    }

    /**
     * Create an instance of {@link SameOrBefore }
     * 
     */
    public SameOrBefore createSameOrBefore() {
        return new SameOrBefore();
    }

    /**
     * Create an instance of {@link MeetsAfter }
     * 
     */
    public MeetsAfter createMeetsAfter() {
        return new MeetsAfter();
    }

    /**
     * Create an instance of {@link BinaryExpression }
     * 
     */
    public BinaryExpression createBinaryExpression() {
        return new BinaryExpression();
    }

    /**
     * Create an instance of {@link Equal }
     * 
     */
    public Equal createEqual() {
        return new Equal();
    }

    /**
     * Create an instance of {@link DifferenceBetween }
     * 
     */
    public DifferenceBetween createDifferenceBetween() {
        return new DifferenceBetween();
    }

    /**
     * Create an instance of {@link MeetsBefore }
     * 
     */
    public MeetsBefore createMeetsBefore() {
        return new MeetsBefore();
    }

    /**
     * Create an instance of {@link Substring }
     * 
     */
    public Substring createSubstring() {
        return new Substring();
    }

    /**
     * Create an instance of {@link StdDev }
     * 
     */
    public StdDev createStdDev() {
        return new StdDev();
    }

    /**
     * Create an instance of {@link Log }
     * 
     */
    public Log createLog() {
        return new Log();
    }

    /**
     * Create an instance of {@link IndexOf }
     * 
     */
    public IndexOf createIndexOf() {
        return new IndexOf();
    }

    /**
     * Create an instance of {@link Modulo }
     * 
     */
    public Modulo createModulo() {
        return new Modulo();
    }

    /**
     * Create an instance of {@link ToBoolean }
     * 
     */
    public ToBoolean createToBoolean() {
        return new ToBoolean();
    }

    /**
     * Create an instance of {@link ToInteger }
     * 
     */
    public ToInteger createToInteger() {
        return new ToInteger();
    }

    /**
     * Create an instance of {@link Flatten }
     * 
     */
    public Flatten createFlatten() {
        return new Flatten();
    }

    /**
     * Create an instance of {@link MaxValue }
     * 
     */
    public MaxValue createMaxValue() {
        return new MaxValue();
    }

    /**
     * Create an instance of {@link ToDateTime }
     * 
     */
    public ToDateTime createToDateTime() {
        return new ToDateTime();
    }

    /**
     * Create an instance of {@link ByColumn }
     * 
     */
    public ByColumn createByColumn() {
        return new ByColumn();
    }

    /**
     * Create an instance of {@link LastPositionOf }
     * 
     */
    public LastPositionOf createLastPositionOf() {
        return new LastPositionOf();
    }

    /**
     * Create an instance of {@link ListTypeSpecifier }
     * 
     */
    public ListTypeSpecifier createListTypeSpecifier() {
        return new ListTypeSpecifier();
    }

    /**
     * Create an instance of {@link Ends }
     * 
     */
    public Ends createEnds() {
        return new Ends();
    }

    /**
     * Create an instance of {@link OverlapsAfter }
     * 
     */
    public OverlapsAfter createOverlapsAfter() {
        return new OverlapsAfter();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link Current }
     * 
     */
    public Current createCurrent() {
        return new Current();
    }

    /**
     * Create an instance of {@link Interval }
     * 
     */
    public Interval createInterval() {
        return new Interval();
    }

    /**
     * Create an instance of {@link ExpressionDef }
     * 
     */
    public ExpressionDef createExpressionDef() {
        return new ExpressionDef();
    }

    /**
     * Create an instance of {@link In }
     * 
     */
    public In createIn() {
        return new In();
    }

    /**
     * Create an instance of {@link Max }
     * 
     */
    public Max createMax() {
        return new Max();
    }

    /**
     * Create an instance of {@link Is }
     * 
     */
    public Is createIs() {
        return new Is();
    }

    /**
     * Create an instance of {@link ToQuantity }
     * 
     */
    public ToQuantity createToQuantity() {
        return new ToQuantity();
    }

    /**
     * Create an instance of {@link Case }
     * 
     */
    public Case createCase() {
        return new Case();
    }

    /**
     * Create an instance of {@link IntervalTypeSpecifier }
     * 
     */
    public IntervalTypeSpecifier createIntervalTypeSpecifier() {
        return new IntervalTypeSpecifier();
    }

    /**
     * Create an instance of {@link VersionedIdentifier }
     * 
     */
    public VersionedIdentifier createVersionedIdentifier() {
        return new VersionedIdentifier();
    }

    /**
     * Create an instance of {@link Without }
     * 
     */
    public Without createWithout() {
        return new Without();
    }

    /**
     * Create an instance of {@link ValueSetDef }
     * 
     */
    public ValueSetDef createValueSetDef() {
        return new ValueSetDef();
    }

    /**
     * Create an instance of {@link Width }
     * 
     */
    public Width createWidth() {
        return new Width();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link CalculateAge }
     * 
     */
    public CalculateAge createCalculateAge() {
        return new CalculateAge();
    }

    /**
     * Create an instance of {@link GreaterOrEqual }
     * 
     */
    public GreaterOrEqual createGreaterOrEqual() {
        return new GreaterOrEqual();
    }

    /**
     * Create an instance of {@link ByDirection }
     * 
     */
    public ByDirection createByDirection() {
        return new ByDirection();
    }

    /**
     * Create an instance of {@link ToString }
     * 
     */
    public ToString createToString() {
        return new ToString();
    }

    /**
     * Create an instance of {@link Tuple }
     * 
     */
    public Tuple createTuple() {
        return new Tuple();
    }

    /**
     * Create an instance of {@link AnyTrue }
     * 
     */
    public AnyTrue createAnyTrue() {
        return new AnyTrue();
    }

    /**
     * Create an instance of {@link Null }
     * 
     */
    public Null createNull() {
        return new Null();
    }

    /**
     * Create an instance of {@link ParameterDef }
     * 
     */
    public ParameterDef createParameterDef() {
        return new ParameterDef();
    }

    /**
     * Create an instance of {@link TimezoneFrom }
     * 
     */
    public TimezoneFrom createTimezoneFrom() {
        return new TimezoneFrom();
    }

    /**
     * Create an instance of {@link ReturnClause }
     * 
     */
    public ReturnClause createReturnClause() {
        return new ReturnClause();
    }

    /**
     * Create an instance of {@link FunctionDef }
     * 
     */
    public FunctionDef createFunctionDef() {
        return new FunctionDef();
    }

    /**
     * Create an instance of {@link OperandRef }
     * 
     */
    public OperandRef createOperandRef() {
        return new OperandRef();
    }

    /**
     * Create an instance of {@link Intersect }
     * 
     */
    public Intersect createIntersect() {
        return new Intersect();
    }

    /**
     * Create an instance of {@link ToTime }
     * 
     */
    public ToTime createToTime() {
        return new ToTime();
    }

    /**
     * Create an instance of {@link PointFrom }
     * 
     */
    public PointFrom createPointFrom() {
        return new PointFrom();
    }

    /**
     * Create an instance of {@link ReplaceMatches }
     * 
     */
    public ReplaceMatches createReplaceMatches() {
        return new ReplaceMatches();
    }

    /**
     * Create an instance of {@link MinValue }
     * 
     */
    public MinValue createMinValue() {
        return new MinValue();
    }

    /**
     * Create an instance of {@link CaseItem }
     * 
     */
    public CaseItem createCaseItem() {
        return new CaseItem();
    }

    /**
     * Create an instance of {@link Sort }
     * 
     */
    public Sort createSort() {
        return new Sort();
    }

    /**
     * Create an instance of {@link UsingDef }
     * 
     */
    public UsingDef createUsingDef() {
        return new UsingDef();
    }

    /**
     * Create an instance of {@link Less }
     * 
     */
    public Less createLess() {
        return new Less();
    }

    /**
     * Create an instance of {@link Concept }
     * 
     */
    public Concept createConcept() {
        return new Concept();
    }

    /**
     * Create an instance of {@link Ln }
     * 
     */
    public Ln createLn() {
        return new Ln();
    }

    /**
     * Create an instance of {@link LetClause }
     * 
     */
    public LetClause createLetClause() {
        return new LetClause();
    }

    /**
     * Create an instance of {@link ToConcept }
     * 
     */
    public ToConcept createToConcept() {
        return new ToConcept();
    }

    /**
     * Create an instance of {@link InValueSet }
     * 
     */
    public InValueSet createInValueSet() {
        return new InValueSet();
    }

    /**
     * Create an instance of {@link And }
     * 
     */
    public And createAnd() {
        return new And();
    }

    /**
     * Create an instance of {@link Slice }
     * 
     */
    public Slice createSlice() {
        return new Slice();
    }

    /**
     * Create an instance of {@link Equivalent }
     * 
     */
    public Equivalent createEquivalent() {
        return new Equivalent();
    }

    /**
     * Create an instance of {@link TruncatedDivide }
     * 
     */
    public TruncatedDivide createTruncatedDivide() {
        return new TruncatedDivide();
    }

    /**
     * Create an instance of {@link InCodeSystem }
     * 
     */
    public InCodeSystem createInCodeSystem() {
        return new InCodeSystem();
    }

    /**
     * Create an instance of {@link Except }
     * 
     */
    public Except createExcept() {
        return new Except();
    }

    /**
     * Create an instance of {@link Before }
     * 
     */
    public Before createBefore() {
        return new Before();
    }

    /**
     * Create an instance of {@link IncludedIn }
     * 
     */
    public IncludedIn createIncludedIn() {
        return new IncludedIn();
    }

    /**
     * Create an instance of {@link Message }
     * 
     */
    public Message createMessage() {
        return new Message();
    }

    /**
     * Create an instance of {@link Truncate }
     * 
     */
    public Truncate createTruncate() {
        return new Truncate();
    }

    /**
     * Create an instance of {@link Variance }
     * 
     */
    public Variance createVariance() {
        return new Variance();
    }

    /**
     * Create an instance of {@link edu.phema.elm_to_omop.model_elm.Includes }
     * 
     */
    public edu.phema.elm_to_omop.model_elm.Includes createIncludes() {
        return new edu.phema.elm_to_omop.model_elm.Includes();
    }

    /**
     * Create an instance of {@link ExpressionRef }
     * 
     */
    public ExpressionRef createExpressionRef() {
        return new ExpressionRef();
    }

    /**
     * Create an instance of {@link Indexer }
     * 
     */
    public Indexer createIndexer() {
        return new Indexer();
    }

    /**
     * Create an instance of {@link Round }
     * 
     */
    public Round createRound() {
        return new Round();
    }

    /**
     * Create an instance of {@link ByExpression }
     * 
     */
    public ByExpression createByExpression() {
        return new ByExpression();
    }

    /**
     * Create an instance of {@link Collapse }
     * 
     */
    public Collapse createCollapse() {
        return new Collapse();
    }

    /**
     * Create an instance of {@link Floor }
     * 
     */
    public Floor createFloor() {
        return new Floor();
    }

    /**
     * Create an instance of {@link TimeOfDay }
     * 
     */
    public TimeOfDay createTimeOfDay() {
        return new TimeOfDay();
    }

    /**
     * Create an instance of {@link CodeDef }
     * 
     */
    public CodeDef createCodeDef() {
        return new CodeDef();
    }

    /**
     * Create an instance of {@link Mode }
     * 
     */
    public Mode createMode() {
        return new Mode();
    }

    /**
     * Create an instance of {@link PopulationStdDev }
     * 
     */
    public PopulationStdDev createPopulationStdDev() {
        return new PopulationStdDev();
    }

    /**
     * Create an instance of {@link AliasedQuerySource }
     * 
     */
    public AliasedQuerySource createAliasedQuerySource() {
        return new AliasedQuerySource();
    }

    /**
     * Create an instance of {@link Quantity }
     * 
     */
    public Quantity createQuantity() {
        return new Quantity();
    }

    /**
     * Create an instance of {@link Today }
     * 
     */
    public Today createToday() {
        return new Today();
    }

    /**
     * Create an instance of {@link ConceptDef }
     * 
     */
    public ConceptDef createConceptDef() {
        return new ConceptDef();
    }

    /**
     * Create an instance of {@link TupleElement }
     * 
     */
    public TupleElement createTupleElement() {
        return new TupleElement();
    }

    /**
     * Create an instance of {@link Times }
     * 
     */
    public Times createTimes() {
        return new Times();
    }

    /**
     * Create an instance of {@link Greater }
     * 
     */
    public Greater createGreater() {
        return new Greater();
    }

    /**
     * Create an instance of {@link Negate }
     * 
     */
    public Negate createNegate() {
        return new Negate();
    }

    /**
     * Create an instance of {@link Exp }
     * 
     */
    public Exp createExp() {
        return new Exp();
    }

    /**
     * Create an instance of {@link Library.Usings }
     * 
     */
    public Library.Usings createLibraryUsings() {
        return new Library.Usings();
    }

    /**
     * Create an instance of {@link Library.Includes }
     * 
     */
    public Library.Includes createLibraryIncludes() {
        return new Library.Includes();
    }

    /**
     * Create an instance of {@link Library.Parameters }
     * 
     */
    public Library.Parameters createLibraryParameters() {
        return new Library.Parameters();
    }

    /**
     * Create an instance of {@link Library.CodeSystems }
     * 
     */
    public Library.CodeSystems createLibraryCodeSystems() {
        return new Library.CodeSystems();
    }

    /**
     * Create an instance of {@link Library.ValueSets }
     * 
     */
    public Library.ValueSets createLibraryValueSets() {
        return new Library.ValueSets();
    }

    /**
     * Create an instance of {@link Library.Codes }
     * 
     */
    public Library.Codes createLibraryCodes() {
        return new Library.Codes();
    }

    /**
     * Create an instance of {@link Library.Concepts }
     * 
     */
    public Library.Concepts createLibraryConcepts() {
        return new Library.Concepts();
    }

    /**
     * Create an instance of {@link Library.Statements }
     * 
     */
    public Library.Statements createLibraryStatements() {
        return new Library.Statements();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Library }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:hl7-org:elm:r1", name = "library")
    public JAXBElement<Library> createLibrary(Library value) {
        return new JAXBElement<Library>(_Library_QNAME, Library.class, null, value);
    }

}
